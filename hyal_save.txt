macro "hyal_save" {


// Retrieves the arguments given to the function
args = getArgument();

// If no arguments are given the user is asked to choose a directory (This should only happen when it is first run)
if (args == ""){
	args = getDirectory("Choose a Directory");
}

// Sets the directory to load the images from as the directory given as an argument
// or as the directory chosen by the user.
loadDir = args;

// checkForDone is used to determine if a directory has already been visited by the function
// Checks for the existance of an imagej folder within the given directory.
// If one exists the directory is skipped
checkForDone = 0;
if (File.exists(loadDir + "imagej\\")){
	checkForDone = 1;
}


saveDir = loadDir + "imagej\\";
File.makeDirectory(saveDir);

// retrieves a list of the files in the folder.

fileList = getFileList(loadDir);

// Makes a folder at the save file path

for (i = 0; i < lengthOf(fileList); i++){
	if (File.isDirectory(loadDir + fileList[i]) && fileList[i] != "imagej/"){
		runMacro("hyal_save", loadDir + fileList[i]);
	} else if (endsWith(fileList[i],".nd2") && checkForDone == 0) {
		name = fileList[i];
		file = loadDir + name;
		run("Bio-Formats Importer", "open=[file] autoscale color_mode=Colorized rois_import=[ROI manager] view=Hyperstack stack_order=XYCZT");
		saveName = getTitle;
		rename("temp");
		run("Split Channels");
		selectWindow("C4-temp");
		run("RGB Color");
		saveAs("tiff", saveDir + name + " SMA");

		selectWindow("C3-temp");
		run("RGB Color");
		saveAs("tiff", saveDir + name + " Green");


		selectWindow("C2-temp");
		run("RGB Color");
		saveAs("tiff", saveDir + name + " Dapi");

		run("Merge Channels...", "c1=[" + name + " SMA.tif] c2=[" + name + " Green.tif] c3=[" + name + " Dapi.tif] create");
		selectWindow("C1-temp");
		run("Close");
		selectWindow("Composite");
		run("RGB Color");
		saveAs("tiff", saveDir + name);
		run("Close");
	}


}
}
